

# ðŸš€ React Interview Master List (85â€“90 Topics)

### 1. Core Fundamentals (Basics to Strong Junior Level)

1. What React is and why itâ€™s different from traditional DOM manipulation
2. JSX â€“ syntax, rules, and why itâ€™s needed
3. React components: function vs. class components
4. Props â€“ passing, default props, propTypes
5. State â€“ useState basics, updating state correctly
6. Virtual DOM vs Real DOM
7. Rendering lists with `map` and handling keys
8. Event handling in React (synthetic events)
9. Conditional rendering techniques
10. Controlled vs uncontrolled components (forms)
11. Fragments & short syntax (`<>...</>`)
12. React.StrictMode and its importance
13. Component lifecycle (class components vs hooks way)

---

### 2. Hooks (From Core to Advanced Usage)

14. useState deep dive â€“ batching, functional updates
15. useEffect â€“ dependencies, cleanup, common pitfalls
16. useRef â€“ storing values, accessing DOM nodes
17. useContext â€“ consuming context with/without hooks
18. useReducer â€“ reducer logic, when to use vs useState
19. useMemo â€“ memoizing expensive calculations
20. useCallback â€“ memoizing functions
21. useLayoutEffect â€“ difference from useEffect
22. useImperativeHandle â€“ customizing refs
23. Custom hooks â€“ extracting reusable logic
24. Rules of Hooks & lint enforcement
25. Advanced hooks patterns â€“ hook factories, composition

---

### 3. Props, State & Data Flow

26. Lifting state up in React
27. Prop drilling problem and solutions
28. Derived state pitfalls (duplicating props in state)
29. One-way data flow principle
30. Passing callbacks between components
31. Immutable updates in state (arrays/objects)

---

### 4. Context, State Management & Data Layer

32. React Context API â€“ provider, consumer
33. Avoiding unnecessary re-renders with context
34. Redux â€“ core concepts: store, actions, reducers
35. Redux Toolkit (RTK) â€“ slices, createAsyncThunk
36. Zustand â€“ lightweight state management
37. Jotai / Recoil basics (modern alternatives)
38. React Query (TanStack Query) â€“ fetching & caching data
39. Global vs local state â€“ best practices
40. Server state vs client state distinction

---

### 5. Rendering & Reconciliation

41. Reconciliation algorithm (diffing, keys importance)
42. React rendering behavior â€“ when components re-render
43. PureComponent & React.memo
44. Shallow vs deep comparison in React re-renders
45. Windowing/virtualization (React Virtualized, React Window)
46. Suspense â€“ for lazy loading and async UI
47. Concurrent rendering (React 18)

---

### 6. Forms & User Input

48. Handling text, checkbox, radio, and select inputs
49. Controlled vs uncontrolled inputs revisited
50. React Hook Form â€“ basics and validation
51. Yup/Zod integration for form validation
52. File uploads in React
53. Debouncing and throttling input handlers

---

### 7. Routing

54. React Router v6 â€“ core concepts (Route, Link, Navigate)
55. Nested routes and layouts
56. Programmatic navigation (`useNavigate`)
57. Dynamic routing with params
58. Protected routes and authentication flows
59. Lazy loading routes
60. Difference between client-side and server-side routing

---

### 8. Performance Optimization

61. Avoiding unnecessary renders â€“ keys, memo, callbacks
62. Code splitting & lazy loading components
63. React Profiler (DevTools)
64. Bundle analysis & tree shaking
65. Suspense for data fetching (experimental)
66. Virtualization of long lists
67. Optimizing forms (debounce, controlled vs uncontrolled choice)

---

### 9. Asynchronous & Data Fetching

68. Fetching data with fetch/axios inside useEffect
69. AbortController for cancelling requests
70. Loading, error, and empty states handling
71. React Query deep dive â€“ caching, invalidation
72. SWR (stale-while-revalidate) pattern
73. GraphQL with Apollo Client / Relay
74. Handling race conditions in async requests

---

### 10. Testing & Quality

75. Unit testing React components with Jest
76. React Testing Library â€“ queries, user events
77. Snapshot testing
78. Mocking APIs and fetch requests
79. E2E testing with Cypress/Playwright
80. Test coverage & best practices

---

### 11. Advanced React & Ecosystem

81. Error boundaries (componentDidCatch / error handling)
82. Higher-Order Components (HOCs) â€“ pros & cons
83. Render props pattern
84. Portals â€“ rendering outside root DOM node
85. StrictMode impacts in dev
86. Concurrent features in React 18 (useTransition, useDeferredValue)
87. Server-Side Rendering (SSR) with Next.js basics
88. Static site generation (SSG) with Next.js
89. Hydration process in SSR apps
90. React Server Components (RSC â€“ upcoming standard)
