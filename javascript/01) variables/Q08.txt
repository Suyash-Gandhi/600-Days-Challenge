Q8. Why does this code not throw an error?

console.log(a);  
var a = 10;

=> Hoisting of var

In JavaScript, variable declarations (but not initializations) 
are “hoisted” to the top of their scope (global or function).

With var, the variable is automatically initialized with 
undefined at the time of hoisting.

So behind the scenes, the engine treats your code like this:

var a;            // hoisted + initialized as undefined
console.log(a);   // ✅ prints undefined, not error
a = 10;           // assignment happens here

Why no error?

At the moment of console.log(a), the variable already exists 
in memory and has a value (undefined).

Since it exists, accessing it doesn’t throw a ReferenceError.

Instead, it simply logs undefined.