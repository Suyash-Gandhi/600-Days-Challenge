Q1. What are the primitive data types in JavaScript? Explain each with an example.

=> In JavaScript, primitive data types are the most basic types of 
data that are immutable (cannot be changed once created) and 
are compared by value. There are 7 primitive data types:

---

 1. Number

Represents numeric values (both integers and floating-point 
numbers).


let age = 25;       // integer
let price = 99.99;  // floating-point


 Example Usage: Mathematical calculations.

---

 2. String

Represents a sequence of characters, enclosed in single quotes 
(`'`), double quotes (`"`), or backticks (`` ` `` for template
 literals).


let name = "Suyash";
let greeting = `Hello, ${name}!`;


 Example Usage: Storing text, messages, or names.

---

 3. Boolean

Represents a logical value: either `true` or `false`.


let isLoggedIn = true;
let hasAccess = false;


 Example Usage: Conditional checks and control flow.

---

 4. Undefined

Represents a variable that has been declared but not assigned 
a value.


let x;
console.log(x); // undefined


 Example Usage: Default value for uninitialized variables.

---

 5. Null

Represents the intentional absence of any value.


let user = null;


 Example Usage: Clearing variables or indicating “no value”.

---

 6. Symbol (ES6+)

Represents a unique and immutable identifier, often used as 
object property keys.


let id = Symbol("id");
let anotherId = Symbol("id");
console.log(id === anotherId); // false


 Example Usage: Ensuring unique object keys.

---

 7. BigInt (ES2020+)

Represents integers larger than 2^53 - 1 (the largest safe i
nteger in Number).


let hugeNumber = 123456789012345678901234567890n;


 Example Usage: Handling very large numbers (like in crypto or 
 astronomy).

---
