Q14. Explain how BigInt handles operations differently from 
Number. For example, what happens if you run:

10n + 5

and why does it throw an error?

=> BigInt is a new primitive type in JavaScript for 
representing integers larger than Number.MAX_SAFE_INTEGER.

Example:

const big = 9007199254740991n; // Note the "n" at the end


Type check:

typeof big; // "bigint"

JavaScript does not allow implicit mixing of BigInt and Number 
in arithmetic operations.

3. Why this restriction exists

Numbers are floating-point (IEEE 754), whereas BigInt is 
arbitrary-precision integer.

Mixing them could lead to loss of precision or unexpected 
results.

JavaScript forces you to explicitly convert one type to 
another to avoid mistakes.